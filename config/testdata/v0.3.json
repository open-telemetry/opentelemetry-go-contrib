{
    "file_format": "0.3",
    "disabled": false,
    "attribute_limits": {
        "attribute_value_length_limit": 4096,
        "attribute_count_limit": 128
    },
    "logger_provider": {
        "processors": [
            {
                "batch": {
                    "schedule_delay": 5000,
                    "export_timeout": 30000,
                    "max_queue_size": 2048,
                    "max_export_batch_size": 512,
                    "exporter": {
                        "otlp": {
                            "protocol": "http/protobuf",
                            "endpoint": "http://localhost:4318/v1/logs",
                            "certificate": "/app/cert.pem",
                            "client_key": "/app/cert.pem",
                            "client_certificate": "/app/cert.pem",
                            "headers": [
                                {
                                    "name": "api-key",
                                    "value": "1234"
                                }
                            ],
                            "headers_list": "api-key=1234",
                            "compression": "gzip",
                            "timeout": 10000,
                            "insecure": false
                        }
                    }
                }
            },
            {
                "simple": {
                    "exporter": {
                        "console": {}
                    }
                }
            }
        ],
        "limits": {
            "attribute_value_length_limit": 4096,
            "attribute_count_limit": 128
        }
    },
    "meter_provider": {
        "readers": [
            {
                "pull": {
                    "exporter": {
                        "prometheus": {
                            "host": "localhost",
                            "port": 9464,
                            "without_units": false,
                            "without_type_suffix": false,
                            "without_scope_info": false,
                            "with_resource_constant_labels": {
                                "included": [
                                    "service*"
                                ],
                                "excluded": [
                                    "service.attr1"
                                ]
                            }
                        }
                    }
                },
                "producers": [
                    {
                        "opencensus": {}
                    }
                ]
            },
            {
                "periodic": {
                    "interval": 5000,
                    "timeout": 30000,
                    "exporter": {
                        "otlp": {
                            "protocol": "http/protobuf",
                            "endpoint": "http://localhost:4318/v1/metrics",
                            "certificate": "/app/cert.pem",
                            "client_key": "/app/cert.pem",
                            "client_certificate": "/app/cert.pem",
                            "headers": [
                                {
                                    "name": "api-key",
                                    "value": "1234"
                                }
                            ],
                            "headers_list": "api-key=1234",
                            "compression": "gzip",
                            "timeout": 10000,
                            "insecure": false,
                            "temporality_preference": "delta",
                            "default_histogram_aggregation": "base2_exponential_bucket_histogram"
                        }
                    }
                },
                "producers": [
                    {
                        "prometheus": {}
                    }
                ]
            },
            {
                "periodic": {
                    "exporter": {
                        "console": {}
                    }
                }
            }
        ],
        "views": [
            {
                "selector": {
                    "instrument_name": "my-instrument",
                    "instrument_type": "histogram",
                    "unit": "ms",
                    "meter_name": "my-meter",
                    "meter_version": "1.0.0",
                    "meter_schema_url": "https://opentelemetry.io/schemas/1.16.0"
                },
                "stream": {
                    "name": "new_instrument_name",
                    "description": "new_description",
                    "aggregation": {
                        "explicit_bucket_histogram": {
                            "boundaries": [
                                0,
                                5,
                                10,
                                25,
                                50,
                                75,
                                100,
                                250,
                                500,
                                750,
                                1000,
                                2500,
                                5000,
                                7500,
                                10000
                            ],
                            "record_min_max": true
                        }
                    },
                    "attribute_keys": {
                        "included": [
                            "key1",
                            "key2"
                        ],
                        "excluded": [
                            "key3"
                        ]
                    }
                }
            }
        ]
    },
    "propagator": {
        "composite": [
            "tracecontext",
            "baggage",
            "b3",
            "b3multi",
            "jaeger",
            "xray",
            "ottrace"
        ]
    },
    "tracer_provider": {
        "processors": [
            {
                "batch": {
                    "schedule_delay": 5000,
                    "export_timeout": 30000,
                    "max_queue_size": 2048,
                    "max_export_batch_size": 512,
                    "exporter": {
                        "otlp": {
                            "protocol": "http/protobuf",
                            "endpoint": "http://localhost:4318/v1/traces",
                            "certificate": "/app/cert.pem",
                            "client_key": "/app/cert.pem",
                            "client_certificate": "/app/cert.pem",
                            "headers": [
                                {
                                    "name": "api-key",
                                    "value": "1234"
                                }
                            ],
                            "headers_list": "api-key=1234",
                            "compression": "gzip",
                            "timeout": 10000,
                            "insecure": false
                        }
                    }
                }
            },
            {
                "batch": {
                    "exporter": {
                        "zipkin": {
                            "endpoint": "http://localhost:9411/api/v2/spans",
                            "timeout": 10000
                        }
                    }
                }
            },
            {
                "simple": {
                    "exporter": {
                        "console": {}
                    }
                }
            }
        ],
        "limits": {
            "attribute_value_length_limit": 4096,
            "attribute_count_limit": 128,
            "event_count_limit": 128,
            "link_count_limit": 128,
            "event_attribute_count_limit": 128,
            "link_attribute_count_limit": 128
        },
        "sampler": {
            "parent_based": {
                "root": {
                    "trace_id_ratio_based": {
                        "ratio": 0.0001
                    }
                },
                "remote_parent_sampled": {
                    "always_on": {}
                },
                "remote_parent_not_sampled": {
                    "always_off": {}
                },
                "local_parent_sampled": {
                    "always_on": {}
                },
                "local_parent_not_sampled": {
                    "always_off": {}
                }
            }
        }
    },
    "resource": {
        "attributes": [
            {
                "name": "service.name",
                "value": "unknown_service"
            },
            {
                "name": "string_key",
                "value": "value",
                "type": "string"
            },
            {
                "name": "bool_key",
                "value": true,
                "type": "bool"
            },
            {
                "name": "int_key",
                "value": 1,
                "type": "int"
            },
            {
                "name": "double_key",
                "value": 1.1,
                "type": "double"
            },
            {
                "name": "string_array_key",
                "value": [
                    "value1",
                    "value2"
                ],
                "type": "string_array"
            },
            {
                "name": "bool_array_key",
                "value": [
                    true,
                    false
                ],
                "type": "bool_array"
            },
            {
                "name": "int_array_key",
                "value": [
                    1,
                    2
                ],
                "type": "int_array"
            },
            {
                "name": "double_array_key",
                "value": [
                    1.1,
                    2.2
                ],
                "type": "double_array"
            }
        ],
        "attributes_list": "service.namespace=my-namespace,service.version=1.0.0",
        "detectors": {
            "attributes": {
                "included": [
                    "process.*"
                ],
                "excluded": [
                    "process.command_args"
                ]
            }
        },
        "schema_url": "https://opentelemetry.io/schemas/1.16.0"
    },
    "instrumentation": {
        "general": {
            "peer": {
                "service_mapping": [
                    {
                        "peer": "1.2.3.4",
                        "service": "FooService"
                    },
                    {
                        "peer": "2.3.4.5",
                        "service": "BarService"
                    }
                ]
            },
            "http": {
                "client": {
                    "request_captured_headers": [
                        "Content-Type",
                        "Accept"
                    ],
                    "response_captured_headers": [
                        "Content-Type",
                        "Content-Encoding"
                    ]
                },
                "server": {
                    "request_captured_headers": [
                        "Content-Type",
                        "Accept"
                    ],
                    "response_captured_headers": [
                        "Content-Type",
                        "Content-Encoding"
                    ]
                }
            }
        },
        "cpp": {
            "example": {
                "property": "value"
            }
        },
        "dotnet": {
            "example": {
                "property": "value"
            }
        },
        "erlang": {
            "example": {
                "property": "value"
            }
        },
        "go": {
            "example": {
                "property": "value"
            }
        },
        "java": {
            "example": {
                "property": "value"
            }
        },
        "js": {
            "example": {
                "property": "value"
            }
        },
        "php": {
            "example": {
                "property": "value"
            }
        },
        "python": {
            "example": {
                "property": "value"
            }
        },
        "ruby": {
            "example": {
                "property": "value"
            }
        },
        "rust": {
            "example": {
                "property": "value"
            }
        },
        "swift": {
            "example": {
                "property": "value"
            }
        }
    }
}